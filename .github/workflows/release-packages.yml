name: Release
permissions:
  contents: write

on:
  release:
    types: [created]

jobs:
  build:
    name: Build for ${{ matrix.target }}

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            filename: linux-x86_64
            debos: amd64
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            filename: linux-x86_64-musl
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            filename: linux-aarch64
            debos: arm64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            filename: linux-aarch64-musl
          - os: macos-latest
            target: aarch64-apple-darwin
            filename: macos-aarch64
          - os: macos-latest
            target: x86_64-apple-darwin
            filename: macos-x86_64

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v5
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Install cross (Linux only)
        if: runner.os == 'Linux'
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Install cargo-deb (non-MUSL Linux only)
        if: runner.os == 'Linux' && !contains(matrix.target, 'musl')
        run: cargo install cargo-deb

      - name: Install cargo-generate-rpm (non-MUSL Linux only)
        if: runner.os == 'Linux' && !contains(matrix.target, 'musl')
        run: cargo install cargo-generate-rpm

      - name: Build binary
        run: |
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            cross build --release --target ${{ matrix.target }}
          else
            cargo build --release --target ${{ matrix.target }}
          fi

      - name: Prepare binary with OS and arch in filename
        run: |
          mkdir -p dist
          SRC_PATH=target/${{ matrix.target }}/release/memy
          FILENAME=$(echo ${{ matrix.filename }})
          DEST_NAME="memy-$FILENAME"

          cp "$SRC_PATH" "dist/$DEST_NAME"
          chmod +x "dist/$DEST_NAME"

      - name: Build .deb package (non-MUSL Linux only)
        if: runner.os == 'Linux' && !contains(matrix.target, 'musl')
        run: |
          cargo deb --no-strip --no-build --target ${{ matrix.target }}
          cp -v $(ls target/debian/*${{ matrix.debos }}.deb) dist/memy_latest_${{ matrix.debos }}.deb

      - name: Build .rpm package (non-MUSL Linux only)
        if: runner.os == 'Linux' && !contains(matrix.target, 'musl')
        run: |
          cargo generate-rpm --arch ${{ matrix.target }}
          cp -v $(ls target/generate-rpm/*${{ matrix.debos }}.rpm) dist/memy_latest_${{ matrix.debos }}.rpm

      - name: Upload binaries to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
